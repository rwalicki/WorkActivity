<UserControl x:Class="WorkActivity.WPF.Views.TaskListView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:WorkActivity.WPF.Views"
             xmlns:controls="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity" 
             xmlns:cnv="clr-namespace:WorkActivity.WPF.Converters"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
    <UserControl.Resources>
        <cnv:WidthConverter x:Key="WidthConverter"/>
    </UserControl.Resources>
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded">
            <i:InvokeCommandAction Command="{Binding OnLoadCommand}"/>
        </i:EventTrigger>
    </i:Interaction.Triggers>
    <Grid Margin="10" Background="White">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Grid Grid.Row="0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <TextBlock
                Grid.Column="0"
            Margin="10 10"
            Style="{StaticResource MaterialDesignHeadline6TextBlock}"
            Foreground="#673ab7"
            Text="Tasks"/>
            <Button Grid.Column="1" Width="50" Height="30" Padding="0" HorizontalAlignment="Left" Style="{DynamicResource MaterialDesignFlatButton}" Command="{Binding AddTaskCommand}">
                <controls:PackIcon Kind="Add"/>
            </Button>
        </Grid>
        <Grid Grid.Row="1" Margin="5 20 0 10">
            <StackPanel Orientation="Horizontal">
                <controls:PackIcon Kind="Search" VerticalAlignment="Center" Padding="0" Width="25" Height="25" Foreground="#673ab7"/>
                <TextBox Text="{Binding SearchText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Width="300"/>
            </StackPanel>
        </Grid>

        <DataGrid Grid.Row="2" Style="{DynamicResource WorkActivityDataGridStyle}" ItemsSource="{Binding ItemView}">
            
            <!--<DataGrid.CellStyle>
                <Style TargetType="DataGridCell" BasedOn="{StaticResource MaterialDesignDataGridCell}">
                    <Setter Property="BorderThickness" Value="0"/>
                </Style>
            </DataGrid.CellStyle>-->
            <DataGrid.Columns>
                <DataGridTextColumn Binding="{Binding Number}" Header="Number" Width="Auto" />
                <DataGridTextColumn Binding="{Binding Title}" Header="Title" Width="*" />
                <DataGridTemplateColumn Header="" Width="Auto">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Button Width="30" Height="30" Padding="0" Margin="0" Style="{DynamicResource MaterialDesignFlatButton}" Command="{Binding DataContext.OnDeleteCommand, RelativeSource={RelativeSource AncestorType=local:TaskListView}}" CommandParameter="{Binding .}">
                                <controls:PackIcon Width="25" Height="25" Kind="Delete"/>
                            </Button>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
            </DataGrid.Columns>
            
        </DataGrid>
        <!--<ListView Grid.Row="2" ItemsSource="{Binding ItemView}">
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="MouseDoubleClick">
                    <i:InvokeCommandAction Command="{Binding OnAddWorkItem}" CommandParameter="{Binding SelectedItem, RelativeSource={RelativeSource FindAncestor, AncestorType=ListView}}"/>
                </i:EventTrigger>
            </i:Interaction.Triggers>
            <ListView.View>
                <GridView>
                    <GridViewColumn DisplayMemberBinding="{Binding Number}" Header="Number" Width="100"/>
                    <GridViewColumn DisplayMemberBinding="{Binding Title}" Header="Title" Width="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=ListView}, Converter={StaticResource WidthConverter}, ConverterParameter=1}"/>
                    <GridViewColumn Header="" Width="50">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <Button Width="30" Height="30" Padding="0" Margin="0" Style="{DynamicResource MaterialDesignFlatButton}" Command="{Binding DataContext.OnDeleteCommand, RelativeSource={RelativeSource AncestorType=local:TaskListView}}" CommandParameter="{Binding .}">
                                    <controls:PackIcon Width="25" Height="25" Kind="Delete"/>
                                </Button>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                    <GridView.ColumnHeaderContainerStyle>
                        <Style TargetType="GridViewColumnHeader" BasedOn="{StaticResource {x:Type GridViewColumnHeader}}">
                            <Setter Property="Padding" Value="5"/>
                            <Setter Property="TextBlock.FontWeight" Value="Bold"/>
                            <Setter Property="TextBlock.Foreground" Value="#673ab7"/>
                        </Style>
                    </GridView.ColumnHeaderContainerStyle>
                </GridView>
            </ListView.View>
            <ListView.ItemContainerStyle>
                <Style TargetType="ListViewItem" BasedOn="{StaticResource MaterialDesignGridViewItem}">
                    <Setter Property="VerticalContentAlignment" Value="Center"/>
                    <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                </Style>
            </ListView.ItemContainerStyle>
        </ListView>-->
    </Grid>
    
</UserControl>
